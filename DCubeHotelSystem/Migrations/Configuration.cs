namespace DCubeHotelSystem.Migrations
{
    using DCubeHotelDomain.Models;
    using DCubeHotelDomain.Models.Accounts;
    using System.Data.Entity.Migrations;
    using System.Linq;

    internal sealed class Configuration : DbMigrationsConfiguration<DCubeHotelSystem.DataContext.HotelDbContext>
    {
        public Configuration()
        {
            AutomaticMigrationsEnabled = true;
            AutomaticMigrationDataLossAllowed = true;
        }

        protected override void Seed(DCubeHotelSystem.DataContext.HotelDbContext context)
        {
            //var adminUser = context.Roles.ToList().Where(o => o.Name == "Dcubehotel");
            if (context.Roles.Count() == 0)
            {
                context.Roles.AddOrUpdate(p => p.Name, new HotelRole { Id = "1", Name = "SuperAdmin" });
                context.Roles.AddOrUpdate(p => p.Name, new HotelRole { Id = "2", Name = "Admin" });
                context.Roles.AddOrUpdate(p => p.Name, new HotelRole { Id = "3", Name = "Account" });
                context.Roles.AddOrUpdate(p => p.Name, new HotelRole { Id = "4", Name = "Counter" });
            }

            //context.UserRoles.AddOrUpdate(p => p.RoleId, new IdentityUserRole { RoleId = "1", UserId = "1" });
            if (context.AccountTypes.Count() == 0)
            {
                context.AccountTypes.AddOrUpdate(
              p => p.Name,
              new AccountType { Id = 1, DefaultFilterType = 0, WorkingRule = 0, NatureofGroup = "Liabilities", Name = "Capital Account", UnderGroupLedger = "0" },
              new AccountType { Id = 2, DefaultFilterType = 0, WorkingRule = 0, NatureofGroup = "Liabilities", Name = "Reserves & Surplus", UnderGroupLedger = "1" },
              new AccountType { Id = 3, DefaultFilterType = 0, WorkingRule = 0, NatureofGroup = "Liabilities", Name = "Current Liabilities", UnderGroupLedger = "0" },
              new AccountType { Id = 4, DefaultFilterType = 0, WorkingRule = 0, NatureofGroup = "Liabilities", Name = "Duties & Taxes", UnderGroupLedger = "3" },
              new AccountType { Id = 5, DefaultFilterType = 0, WorkingRule = 0, NatureofGroup = "Liabilities", Name = "Provisions", UnderGroupLedger = "0" },
              new AccountType { Id = 6, DefaultFilterType = 0, WorkingRule = 0, NatureofGroup = "Liabilities", Name = "Sundry Creditors", UnderGroupLedger = "0" },
              new AccountType { Id = 7, DefaultFilterType = 0, WorkingRule = 0, NatureofGroup = "Liabilities", Name = "Loans (Liability)", UnderGroupLedger = "0" },
              new AccountType { Id = 8, DefaultFilterType = 0, WorkingRule = 0, NatureofGroup = "Liabilities", Name = "Bank OD A/C", UnderGroupLedger = "7" },
              new AccountType { Id = 9, DefaultFilterType = 0, WorkingRule = 0, NatureofGroup = "Liabilities", Name = "Secured Loans", UnderGroupLedger = "0" },
              new AccountType { Id = 10, DefaultFilterType = 0, WorkingRule = 0, NatureofGroup = "Liabilities", Name = "UnSecured Loans", UnderGroupLedger = "0" },
              new AccountType { Id = 11, DefaultFilterType = 0, WorkingRule = 0, NatureofGroup = "Assets", Name = "Current Assets", UnderGroupLedger = "0" },
              new AccountType { Id = 12, DefaultFilterType = 0, WorkingRule = 0, NatureofGroup = "Assets", Name = "Bank Accounts", UnderGroupLedger = "11" },
              new AccountType { Id = 13, DefaultFilterType = 0, WorkingRule = 0, NatureofGroup = "Assets", Name = "Cash-in-hand", UnderGroupLedger = "11" },
              new AccountType { Id = 14, DefaultFilterType = 0, WorkingRule = 0, NatureofGroup = "Assets", Name = "Loans & Advances(Assets)", UnderGroupLedger = "0" },
              new AccountType { Id = 15, DefaultFilterType = 0, WorkingRule = 0, NatureofGroup = "Assets", Name = "Receiveable Accounts", UnderGroupLedger = "0" },
              new AccountType { Id = 16, DefaultFilterType = 0, WorkingRule = 0, NatureofGroup = "Assets", Name = "Sundry Debtors", UnderGroupLedger = "0" },
              new AccountType { Id = 17, DefaultFilterType = 0, WorkingRule = 0, NatureofGroup = "Assets", Name = "Receipt Accounts", UnderGroupLedger = "0" },
              new AccountType { Id = 18, DefaultFilterType = 0, WorkingRule = 0, NatureofGroup = "Assets", Name = "Customer Accounts", UnderGroupLedger = "0" },
              new AccountType { Id = 19, DefaultFilterType = 0, WorkingRule = 0, NatureofGroup = "Income", Name = "Direct Incomes", UnderGroupLedger = "0" },
              new AccountType { Id = 20, DefaultFilterType = 0, WorkingRule = 0, NatureofGroup = "Income", Name = "Sales Accounts", UnderGroupLedger = "19" },
              new AccountType { Id = 21, DefaultFilterType = 0, WorkingRule = 0, NatureofGroup = "Income", Name = "Indirect Incomes", UnderGroupLedger = "0" },
              new AccountType { Id = 22, DefaultFilterType = 0, WorkingRule = 0, NatureofGroup = "Expenses", Name = "Direct Expenses", UnderGroupLedger = "0" },
              new AccountType { Id = 23, DefaultFilterType = 0, WorkingRule = 0, NatureofGroup = "Expenses", Name = "Purchase Accounts", UnderGroupLedger = "22" },
              new AccountType { Id = 24, DefaultFilterType = 0, WorkingRule = 0, NatureofGroup = "Expenses", Name = "Indirect Expenses", UnderGroupLedger = "0" }
            );
            }
            if (context.AccountTypes.Count() == 0)
            {
                context.AccountTransactionTypes.AddOrUpdate(p => p.Name,
                new AccountTransactionType { Id = 1, SortOrder = 0, SourceAccountTypeId = 1, TargetAccountTypeId = 4, DefaultSourceAccountId = 2, DefaultTargetAccountId = 3, ForeignCurrencyId = 0, Name = "Discount" },
                new AccountTransactionType { Id = 2, SortOrder = 0, SourceAccountTypeId = 1, TargetAccountTypeId = 4, DefaultSourceAccountId = 2, DefaultTargetAccountId = 4, ForeignCurrencyId = 0, Name = "Rounding Transaction" },
                new AccountTransactionType { Id = 3, SortOrder = 0, SourceAccountTypeId = 2, TargetAccountTypeId = 1, DefaultSourceAccountId = 1, DefaultTargetAccountId = 2, ForeignCurrencyId = 0, Name = "Sale Transaction" },
                new AccountTransactionType { Id = 4, SortOrder = 0, SourceAccountTypeId = 1, TargetAccountTypeId = 3, DefaultSourceAccountId = 2, DefaultTargetAccountId = 5, ForeignCurrencyId = 0, Name = "Receipt Transaction" },
                new AccountTransactionType { Id = 5, SortOrder = 0, SourceAccountTypeId = 1, TargetAccountTypeId = 5, DefaultSourceAccountId = 2, DefaultTargetAccountId = 0, ForeignCurrencyId = 0, Name = "Journal Transaction" },
                new AccountTransactionType { Id = 6, SortOrder = 0, SourceAccountTypeId = 5, TargetAccountTypeId = 3, DefaultSourceAccountId = 5, DefaultTargetAccountId = 0, ForeignCurrencyId = 0, Name = "Payment Transaction" },
                new AccountTransactionType { Id = 7, SortOrder = 0, SourceAccountTypeId = 1, TargetAccountTypeId = 7, DefaultSourceAccountId = 1, DefaultTargetAccountId = 7, ForeignCurrencyId = 0, Name = "Vat" },
                new AccountTransactionType { Id = 8, SortOrder = 0, SourceAccountTypeId = 7, TargetAccountTypeId = 8, DefaultSourceAccountId = 7, DefaultTargetAccountId = 0, ForeignCurrencyId = 0, Name = "Purchase Order Transaction" },
                new AccountTransactionType { Id = 9, SortOrder = 0, SourceAccountTypeId = 7, TargetAccountTypeId = 8, DefaultSourceAccountId = 7, DefaultTargetAccountId = 0, ForeignCurrencyId = 0, Name = "Purchase Transaction" },
                new AccountTransactionType { Id = 10, SortOrder = 0, SourceAccountTypeId = 2, TargetAccountTypeId = 1, DefaultSourceAccountId = 1, DefaultTargetAccountId = 2, ForeignCurrencyId = 0, Name = "Service Charge Transaction" },
                new AccountTransactionType { Id = 11, SortOrder = 0, SourceAccountTypeId = 1, TargetAccountTypeId = 5, DefaultSourceAccountId = 2, DefaultTargetAccountId = 0, ForeignCurrencyId = 0, Name = "Credit Note Transaction" },
                new AccountTransactionType { Id = 12, SortOrder = 0, SourceAccountTypeId = 1, TargetAccountTypeId = 5, DefaultSourceAccountId = 2, DefaultTargetAccountId = 0, ForeignCurrencyId = 0, Name = "Debit Note Transaction" },
                new AccountTransactionType { Id = 13, SortOrder = 0, SourceAccountTypeId = 1, TargetAccountTypeId = 5, DefaultSourceAccountId = 2, DefaultTargetAccountId = 0, ForeignCurrencyId = 0, Name = "Contra Transaction" },
                new AccountTransactionType { Id = 14, SortOrder = 0, SourceAccountTypeId = 1, TargetAccountTypeId = 5, DefaultSourceAccountId = 2, DefaultTargetAccountId = 0, ForeignCurrencyId = 0, Name = "Stock Transaction" }
                );
            }
            if (context.Accounts.Count() == 0)
            {
                context.Accounts.AddOrUpdate(p => p.Name, new Account { Id = 1, AccountTypeId = 20, ForeignCurrencyId = 0, Name = "Taxable Sales", Address = "", AffectsStock = true, AllowInMobile = false, Amount = 0, Audited = false, City = "", District = "", Email = "", ExciseDutyType = "Sales", ForPayRoll = false, ForServiceTax = false, GSTType = "", IgnoreTDSExempt = true, InterestOnBillWise = false, InventoryValue = true, IsAbatementApplicable = false, IsBillWiseOn = false, IsCondensed = false, ISCostCentresOn = true, IsExempte = false, IsFBTApplicable = false, IsGSTApplicable = false, IsInputCredit = false, IsInterestOn = false, IsTCSApplicable = false, IsTDSApplicable = false, LedgerFBTCategory = "Sales", MaintainBilByBill = false, OpeningBalance = 0, OverRideADVInterest = false, OverRideInterest = false, PanNo = "", ServiceCategory = "Sale", ShowInPaySlip = false, SortPosition = 0, Street = "", TaxClassificationName = "Sales", TaxRate = "13", TaxType = "Sale", TDSDeducteeIsSpecialRate = false, TDSDeducteeType = " ", TDSRateName = " ", Telephone = "", TraderLedNatureOfPurchase = "No", UseForGratuity = false, UseForVat = true },
                new Account { Id = 10000, AccountTypeId = 20, ForeignCurrencyId = 0, Name = "Non Taxable Sales", Address = "", AffectsStock = false, AllowInMobile = false, Amount = 0, Audited = false, City = "", District = "", Email = "", ExciseDutyType = "Sales", ForPayRoll = false, ForServiceTax = false, GSTType = "", IgnoreTDSExempt = true, InterestOnBillWise = false, InventoryValue = true, IsAbatementApplicable = false, IsBillWiseOn = false, IsCondensed = false, ISCostCentresOn = true, IsExempte = false, IsFBTApplicable = false, IsGSTApplicable = false, IsInputCredit = false, IsInterestOn = false, IsTCSApplicable = false, IsTDSApplicable = false, LedgerFBTCategory = "Sales", MaintainBilByBill = false, OpeningBalance = 0, OverRideADVInterest = false, OverRideInterest = false, PanNo = "", ServiceCategory = "Sales", ShowInPaySlip = false, SortPosition = 0, Street = "", TaxClassificationName = "Sales", TaxRate = "0", TaxType = "Sales", TDSDeducteeIsSpecialRate = false, TDSDeducteeType = " ", TDSRateName = " ", Telephone = "", TraderLedNatureOfPurchase = "No", UseForGratuity = false, UseForVat = true },
                new Account { Id = 2, AccountTypeId = 1, ForeignCurrencyId = 0, Name = "Receivables", Address = "", AffectsStock = false, AllowInMobile = false, Amount = 0, Audited = false, City = "", District = "", Email = "", ExciseDutyType = "", ForPayRoll = false, ForServiceTax = false, GSTType = "", IgnoreTDSExempt = true, InterestOnBillWise = false, InventoryValue = true, IsAbatementApplicable = false, IsBillWiseOn = false, IsCondensed = false, ISCostCentresOn = true, IsExempte = false, IsFBTApplicable = false, IsGSTApplicable = false, IsInputCredit = false, IsInterestOn = false, IsTCSApplicable = false, IsTDSApplicable = false, LedgerFBTCategory = "", MaintainBilByBill = false, OpeningBalance = 0, OverRideADVInterest = false, OverRideInterest = false, PanNo = "", ServiceCategory = " ", ShowInPaySlip = false, SortPosition = 0, Street = "", TaxClassificationName = " ", TaxRate = " ", TaxType = " ", TDSDeducteeIsSpecialRate = false, TDSDeducteeType = " ", TDSRateName = " ", Telephone = "", TraderLedNatureOfPurchase = " ", UseForGratuity = false, UseForVat = true },
                new Account { Id = 3, AccountTypeId = 23, ForeignCurrencyId = 0, Name = "Discount", Address = "", AffectsStock = false, AllowInMobile = false, Amount = 0, Audited = false, City = "", District = "", Email = "", ExciseDutyType = "", ForPayRoll = false, ForServiceTax = false, GSTType = "", IgnoreTDSExempt = true, InterestOnBillWise = false, InventoryValue = true, IsAbatementApplicable = false, IsBillWiseOn = false, IsCondensed = false, ISCostCentresOn = true, IsExempte = false, IsFBTApplicable = false, IsGSTApplicable = false, IsInputCredit = false, IsInterestOn = false, IsTCSApplicable = false, IsTDSApplicable = false, LedgerFBTCategory = "", MaintainBilByBill = false, OpeningBalance = 0, OverRideADVInterest = false, OverRideInterest = false, PanNo = "", ServiceCategory = " ", ShowInPaySlip = false, SortPosition = 0, Street = "", TaxClassificationName = " ", TaxRate = " ", TaxType = " ", TDSDeducteeIsSpecialRate = false, TDSDeducteeType = " ", TDSRateName = " ", Telephone = "", TraderLedNatureOfPurchase = " ", UseForGratuity = false, UseForVat = false },
                new Account { Id = 4, AccountTypeId = 23, ForeignCurrencyId = 0, Name = "Rounding", Address = "", AffectsStock = false, AllowInMobile = false, Amount = 0, Audited = false, City = "", District = "", Email = "", ExciseDutyType = "", ForPayRoll = false, ForServiceTax = false, GSTType = "", IgnoreTDSExempt = true, InterestOnBillWise = false, InventoryValue = true, IsAbatementApplicable = false, IsBillWiseOn = false, IsCondensed = false, ISCostCentresOn = true, IsExempte = false, IsFBTApplicable = false, IsGSTApplicable = false, IsInputCredit = false, IsInterestOn = false, IsTCSApplicable = false, IsTDSApplicable = false, LedgerFBTCategory = "", MaintainBilByBill = false, OpeningBalance = 0, OverRideADVInterest = false, OverRideInterest = false, PanNo = "", ServiceCategory = " ", ShowInPaySlip = false, SortPosition = 0, Street = "", TaxClassificationName = " ", TaxRate = " ", TaxType = " ", TDSDeducteeIsSpecialRate = false, TDSDeducteeType = " ", TDSRateName = " ", Telephone = "", TraderLedNatureOfPurchase = " ", UseForGratuity = false, UseForVat = false },
                new Account { Id = 5, AccountTypeId = 13, ForeignCurrencyId = 0, Name = "Cash", Address = "", AffectsStock = false, AllowInMobile = false, Amount = 0, Audited = false, City = "", District = "", Email = "", ExciseDutyType = "", ForPayRoll = false, ForServiceTax = false, GSTType = "", IgnoreTDSExempt = true, InterestOnBillWise = false, InventoryValue = true, IsAbatementApplicable = false, IsBillWiseOn = false, IsCondensed = false, ISCostCentresOn = true, IsExempte = false, IsFBTApplicable = false, IsGSTApplicable = false, IsInputCredit = false, IsInterestOn = false, IsTCSApplicable = false, IsTDSApplicable = false, LedgerFBTCategory = "", MaintainBilByBill = false, OpeningBalance = 0, OverRideADVInterest = false, OverRideInterest = false, PanNo = "", ServiceCategory = " ", ShowInPaySlip = false, SortPosition = 0, Street = "", TaxClassificationName = " ", TaxRate = " ", TaxType = " ", TDSDeducteeIsSpecialRate = false, TDSDeducteeType = " ", TDSRateName = " ", Telephone = "", TraderLedNatureOfPurchase = " ", UseForGratuity = false, UseForVat = false },
                new Account { Id = 6, AccountTypeId = 8, ForeignCurrencyId = 0, Name = "Credit Card", Address = "", AffectsStock = false, AllowInMobile = false, Amount = 0, Audited = false, City = "", District = "", Email = "", ExciseDutyType = "", ForPayRoll = false, ForServiceTax = false, GSTType = "", IgnoreTDSExempt = true, InterestOnBillWise = false, InventoryValue = true, IsAbatementApplicable = false, IsBillWiseOn = false, IsCondensed = false, ISCostCentresOn = true, IsExempte = false, IsFBTApplicable = false, IsGSTApplicable = false, IsInputCredit = false, IsInterestOn = false, IsTCSApplicable = false, IsTDSApplicable = false, LedgerFBTCategory = "", MaintainBilByBill = false, OpeningBalance = 0, OverRideADVInterest = false, OverRideInterest = false, PanNo = "", ServiceCategory = " ", ShowInPaySlip = false, SortPosition = 0, Street = "", TaxClassificationName = " ", TaxRate = " ", TaxType = " ", TDSDeducteeIsSpecialRate = false, TDSDeducteeType = " ", TDSRateName = " ", Telephone = "", TraderLedNatureOfPurchase = " ", UseForGratuity = false, UseForVat = false },
                new Account { Id = 7, AccountTypeId = 18, ForeignCurrencyId = 0, Name = "Customer Account", Address = "", AffectsStock = false, AllowInMobile = false, Amount = 0, Audited = false, City = "", District = "", Email = "", ExciseDutyType = "", ForPayRoll = false, ForServiceTax = false, GSTType = "", IgnoreTDSExempt = true, InterestOnBillWise = false, InventoryValue = true, IsAbatementApplicable = false, IsBillWiseOn = false, IsCondensed = false, ISCostCentresOn = true, IsExempte = false, IsFBTApplicable = false, IsGSTApplicable = false, IsInputCredit = false, IsInterestOn = false, IsTCSApplicable = false, IsTDSApplicable = false, LedgerFBTCategory = "", MaintainBilByBill = false, OpeningBalance = 0, OverRideADVInterest = false, OverRideInterest = false, PanNo = "", ServiceCategory = " ", ShowInPaySlip = false, SortPosition = 0, Street = "", TaxClassificationName = " ", TaxRate = " ", TaxType = " ", TDSDeducteeIsSpecialRate = false, TDSDeducteeType = " ", TDSRateName = " ", Telephone = "", TraderLedNatureOfPurchase = " ", UseForGratuity = false, UseForVat = false },
                new Account { Id = 8, AccountTypeId = 4, ForeignCurrencyId = 0, Name = "Vat 13%", Address = "", AffectsStock = false, AllowInMobile = false, Amount = 0, Audited = false, City = "", District = "", Email = "", ExciseDutyType = "", ForPayRoll = false, ForServiceTax = false, GSTType = "", IgnoreTDSExempt = true, InterestOnBillWise = false, InventoryValue = true, IsAbatementApplicable = false, IsBillWiseOn = false, IsCondensed = false, ISCostCentresOn = true, IsExempte = false, IsFBTApplicable = false, IsGSTApplicable = false, IsInputCredit = false, IsInterestOn = false, IsTCSApplicable = false, IsTDSApplicable = false, LedgerFBTCategory = "", MaintainBilByBill = false, OpeningBalance = 0, OverRideADVInterest = false, OverRideInterest = false, PanNo = "", ServiceCategory = " ", ShowInPaySlip = false, SortPosition = 0, Street = "", TaxClassificationName = " ", TaxRate = "13%", TaxType = " ", TDSDeducteeIsSpecialRate = false, TDSDeducteeType = " ", TDSRateName = " ", Telephone = "", TraderLedNatureOfPurchase = " ", UseForGratuity = false, UseForVat = true },
                new Account { Id = 9, AccountTypeId = 3, ForeignCurrencyId = 0, Name = "Service Charge", Address = "", AffectsStock = false, AllowInMobile = false, Amount = 0, Audited = false, City = "", District = "", Email = "", ExciseDutyType = "", ForPayRoll = false, ForServiceTax = false, GSTType = "", IgnoreTDSExempt = true, InterestOnBillWise = false, InventoryValue = true, IsAbatementApplicable = false, IsBillWiseOn = false, IsCondensed = false, ISCostCentresOn = true, IsExempte = false, IsFBTApplicable = false, IsGSTApplicable = false, IsInputCredit = false, IsInterestOn = false, IsTCSApplicable = false, IsTDSApplicable = false, LedgerFBTCategory = "", MaintainBilByBill = false, OpeningBalance = 0, OverRideADVInterest = false, OverRideInterest = false, PanNo = "", ServiceCategory = " ", ShowInPaySlip = false, SortPosition = 0, Street = "", TaxClassificationName = " ", TaxRate = "10%", TaxType = " ", TDSDeducteeIsSpecialRate = false, TDSDeducteeType = " ", TDSRateName = " ", Telephone = "", TraderLedNatureOfPurchase = " ", UseForGratuity = false, UseForVat = true },
                new Account { Id = 10001, AccountTypeId = 23, ForeignCurrencyId = 0, Name = "Taxable Purchase", Address = "", AffectsStock = false, AllowInMobile = false, Amount = 0, Audited = false, City = "", District = "", Email = "", ExciseDutyType = "Purchase", ForPayRoll = false, ForServiceTax = false, GSTType = "", IgnoreTDSExempt = true, InterestOnBillWise = false, InventoryValue = true, IsAbatementApplicable = false, IsBillWiseOn = false, IsCondensed = false, ISCostCentresOn = true, IsExempte = false, IsFBTApplicable = false, IsGSTApplicable = false, IsInputCredit = false, IsInterestOn = false, IsTCSApplicable = false, IsTDSApplicable = false, LedgerFBTCategory = "Purchase", MaintainBilByBill = false, OpeningBalance = 0, OverRideADVInterest = false, OverRideInterest = false, PanNo = "", ServiceCategory = "Purchase", ShowInPaySlip = false, SortPosition = 0, Street = "", TaxClassificationName = "Purchase", TaxRate = "13", TaxType = "Purchase", TDSDeducteeIsSpecialRate = false, TDSDeducteeType = " ", TDSRateName = " ", Telephone = "", TraderLedNatureOfPurchase = "No", UseForGratuity = false, UseForVat = true },
                new Account { Id = 10002, AccountTypeId = 23, ForeignCurrencyId = 0, Name = "Non Taxable Purchase", Address = "", AffectsStock = false, AllowInMobile = false, Amount = 0, Audited = false, City = "", District = "", Email = "", ExciseDutyType = "Purchase", ForPayRoll = false, ForServiceTax = false, GSTType = "", IgnoreTDSExempt = true, InterestOnBillWise = false, InventoryValue = true, IsAbatementApplicable = false, IsBillWiseOn = false, IsCondensed = false, ISCostCentresOn = true, IsExempte = false, IsFBTApplicable = false, IsGSTApplicable = false, IsInputCredit = false, IsInterestOn = false, IsTCSApplicable = false, IsTDSApplicable = false, LedgerFBTCategory = "Purchase", MaintainBilByBill = false, OpeningBalance = 0, OverRideADVInterest = false, OverRideInterest = false, PanNo = "", ServiceCategory = "Purchase", ShowInPaySlip = false, SortPosition = 0, Street = "", TaxClassificationName = "Purchase", TaxRate = "0", TaxType = "Purchase", TDSDeducteeIsSpecialRate = false, TDSDeducteeType = " ", TDSRateName = " ", Telephone = "", TraderLedNatureOfPurchase = "No", UseForGratuity = false, UseForVat = true },
                new Account { Id = 10003, AccountTypeId = 4, ForeignCurrencyId = 0, Name = "Excise Duty", Address = "", AffectsStock = false, AllowInMobile = false, Amount = 0, Audited = false, City = "", District = "", Email = "", ExciseDutyType = "", ForPayRoll = false, ForServiceTax = false, GSTType = "", IgnoreTDSExempt = true, InterestOnBillWise = false, InventoryValue = true, IsAbatementApplicable = false, IsBillWiseOn = false, IsCondensed = false, ISCostCentresOn = true, IsExempte = false, IsFBTApplicable = false, IsGSTApplicable = false, IsInputCredit = false, IsInterestOn = false, IsTCSApplicable = false, IsTDSApplicable = false, LedgerFBTCategory = "", MaintainBilByBill = false, OpeningBalance = 0, OverRideADVInterest = false, OverRideInterest = false, PanNo = "", ServiceCategory = " ", ShowInPaySlip = false, SortPosition = 0, Street = "", TaxClassificationName = " ", TaxRate = "7%", TaxType = " ", TDSDeducteeIsSpecialRate = false, TDSDeducteeType = " ", TDSRateName = " ", Telephone = "", TraderLedNatureOfPurchase = " ", UseForGratuity = false, UseForVat = true }
            );
            }

            //context.Users.AddOrUpdate(p => p.FullName, new DCubeHotelDomain.Models.HotelUser { Id = "1", FullName = "Administrator", IsActive = true, ResetPassword = false, UserName = "Dcubehotel", Password = "dcubehotel" });
            if (context.Departments.Count() == 0)
            {
                context.Departments.AddOrUpdate(p => p.Name, new DCubeHotelDomain.Models.Tickets.Department { Id = 1, Name = "Sales", PriceTag = "Sales", ScreenMenuId = 1, SortOrder = 0, TicketCreationMethod = 1, TicketTypeId = 1, WarehouseId = 1 });
            }
        }
    }
}